@page "/create-account"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<AppLayout ClassName="create-account" Heading="Create account">
    <MudSnackbarProvider />

    <EditForm Model="Model" OnSubmit="OnSubmit">
        <DataAnnotationsValidator />
        <BSContainer>
            <BSRow MarginBottom="Margins.ExtraLarge">
                <MudTextField @bind-Value="Model.UserName" Label="User name" Variant="Variant.Outlined" For="@(() => Model.UserName)"
                              Margin="Margin.Dense"></MudTextField>
            </BSRow>
            <BSRow MarginBottom="Margins.ExtraLarge">
                <MudTextField @bind-Value="Model.Password" Label="Password" Variant="Variant.Outlined" Margin="Margin.Dense"
                              For="@(() => Model.Password)"></MudTextField>
            </BSRow>
            <BSRow MarginBottom="Margins.ExtraLarge">
                <MudTextField @bind-Value="Model.PhoneNumber" Label="Phone number" Variant="Variant.Outlined" Margin="Margin.Dense"
                              For="@(() => Model.PhoneNumber)"></MudTextField>
            </BSRow>
            <BSRow MarginBottom="Margins.ExtraLarge">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="MudBlazor.Size.Large" ButtonType="ButtonType.Submit"
                           FullWidth="true">Create Account</MudButton>
            </BSRow>
            <MudDivider DividerType="DividerType.Middle" Light="true" Class="mt-10" />
            <BSRow MarginTopAndBottom="Margins.ExtraLarge">
                <div class="text-center">
                    <MudLink Href="sign-in">Already have an account? Log in</MudLink>
                </div>
            </BSRow>
        </BSContainer>
    </EditForm>
</AppLayout>


@code {
    private CreateAccountModel Model { get; set; } = new CreateAccountModel();

    [CascadingParameter]
    protected EventCallback<bool> SetLoader { get; set; }

    private async Task OnSubmit(EditContext e)
    {
        if (e.Validate())
        {
            await SetLoader.InvokeAsync(true);

            HttpResponseMessage response = await Http.PostAsJsonAsync("https://mydigitaldiaryservice.azurewebsites.net/addNewUser", Model);
            UserLoginResponse loginResponse = await response.Content.ReadFromJsonAsync<UserLoginResponse>();
            if (loginResponse != null)
            {
                if (loginResponse.IsUserAdded)
                {
                    Snackbar.Add("New account created successfully!", Severity.Success);
                    Model = new CreateAccountModel();
                }
                else if (loginResponse.IsDuplicateProfile)
                {
                    Snackbar.Add("The username already taken. Try another.", Severity.Error);
                }
                else
                {
                    var errorMessage = loginResponse.ErrorMessage != null ? loginResponse.ErrorMessage : "Something went wrong. Try again!";
                    Snackbar.Add(errorMessage, Severity.Error);
                }
            }
            await SetLoader.InvokeAsync(false);
        }
    }
}



